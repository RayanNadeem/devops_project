pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/RayanNadeem/devops_project.git'
        BRANCH = 'main'
        DOCKER_REGISTRY = 'docker.io'
        FRONTEND_IMAGE = 'docker.io/rayan651/front-end:latest'
        BACKEND_IMAGE = 'docker.io/rayan651/backend:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "Checking out repository from ${GIT_REPO}..."
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "*/${BRANCH}"]],
                        extensions: [],
                        userRemoteConfigs: [[url: "${GIT_REPO}"]]
                    ])
                }
            }
        }

        stage('Build Front-End') {
            steps {
                script {
                    echo "Building Docker image for Front-End..."
                    dir('front-end') {
                        sh '''
                            docker build -t $FRONTEND_IMAGE .
                        '''
                    }
                }
            }
        }

        stage('Build Back-End') {
            steps {
                script {
                    echo "Building Docker image for Back-End..."
                    dir('backend') {
                        sh '''
                            docker build -t $BACKEND_IMAGE .
                        '''
                    }
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        echo "Logging into Docker Hub and pushing Docker images..."
                        sh '''
                            echo $DOCKER_PASS | docker login $DOCKER_REGISTRY -u $DOCKER_USER --password-stdin
                            docker push $FRONTEND_IMAGE
                            docker push $BACKEND_IMAGE
                        '''
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying the application..."
                // Add deployment commands here
                sh 'echo Deploy step executed'
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully."
        }
        failure {
            echo "Pipeline failed. Check logs for details."
        }
    }
}
